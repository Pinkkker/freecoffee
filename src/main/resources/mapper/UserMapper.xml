<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pink.forum.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.pink.freecoffee.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="phoneNumber" jdbcType="INTEGER" property="phoneNumber" />
    <result column="authorization" jdbcType="VARCHAR" property="authorization" />
    <result column="registrationTime" jdbcType="TIMESTAMP" property="registrationTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="follows" jdbcType="INTEGER" property="follows" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="Reputation" jdbcType="INTEGER" property="reputation" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, password, age, phoneNumber, authorization, registrationTime, status, nickname, 
    follows, likes, Reputation, intro, avatar
  </sql>
  <select id="selectByExample" parameterType="com.pink.freecoffee.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pink.freecoffee.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pink.freecoffee.entity.User">
    insert into user (id, name, password, 
      age, phoneNumber, authorization, 
      registrationTime, status, nickname, 
      follows, likes, Reputation, 
      intro, avatar)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{phoneNumber,jdbcType=INTEGER}, #{authorization,jdbcType=VARCHAR}, 
      #{registrationTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, 
      #{follows,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER}, #{reputation,jdbcType=INTEGER}, 
      #{intro,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pink.freecoffee.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phoneNumber != null">
        phoneNumber,
      </if>
      <if test="authorization != null">
        authorization,
      </if>
      <if test="registrationTime != null">
        registrationTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="follows != null">
        follows,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="reputation != null">
        Reputation,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="authorization != null">
        #{authorization,jdbcType=VARCHAR},
      </if>
      <if test="registrationTime != null">
        #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="follows != null">
        #{follows,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="reputation != null">
        #{reputation,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pink.freecoffee.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.phoneNumber != null">
        phoneNumber = #{record.phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="record.authorization != null">
        authorization = #{record.authorization,jdbcType=VARCHAR},
      </if>
      <if test="record.registrationTime != null">
        registrationTime = #{record.registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.follows != null">
        follows = #{record.follows,jdbcType=INTEGER},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.reputation != null">
        Reputation = #{record.reputation,jdbcType=INTEGER},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      phoneNumber = #{record.phoneNumber,jdbcType=INTEGER},
      authorization = #{record.authorization,jdbcType=VARCHAR},
      registrationTime = #{record.registrationTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      follows = #{record.follows,jdbcType=INTEGER},
      likes = #{record.likes,jdbcType=INTEGER},
      Reputation = #{record.reputation,jdbcType=INTEGER},
      intro = #{record.intro,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pink.freecoffee.entity.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        phoneNumber = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="authorization != null">
        authorization = #{authorization,jdbcType=VARCHAR},
      </if>
      <if test="registrationTime != null">
        registrationTime = #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="follows != null">
        follows = #{follows,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="reputation != null">
        Reputation = #{reputation,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pink.freecoffee.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      phoneNumber = #{phoneNumber,jdbcType=INTEGER},
      authorization = #{authorization,jdbcType=VARCHAR},
      registrationTime = #{registrationTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      follows = #{follows,jdbcType=INTEGER},
      likes = #{likes,jdbcType=INTEGER},
      Reputation = #{reputation,jdbcType=INTEGER},
      intro = #{intro,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>